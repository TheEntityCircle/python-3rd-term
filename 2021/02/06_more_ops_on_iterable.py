"""
А теперь чуть менее характерные примеры.
"""

# Есть у нас список
il = [1, 2, 3, 4]

# Под именем il у нас сам list
print("List itself:", il, type(il))
# А обратившись *il можно получить все значения из него
print("Values from list:", *il)

# А теперь есть второй list
sl = list("abcd")

# Если мы захотим параллельную итерацию по двум спискам,
# её можно организовать вот так.
for i, s in zip(il, sl):
    print(f'Ad-hoc pair: {i} {s}')

# Технически zip возвращает (сюрприз!) итератор.
# (Да, ровно как в C++. Иногда они возвращаются.)
print(type(zip(il, sl)))

# При желании этот итератор можно к чему-нибудь кастануть.
print(type(list(zip(il, sl))))

# А теперь мы хотим что-нибудь применить ко всем элементам списка.
# Можем сделать это, например, вот так.
# Вызов map применяет заданную функцию к заданной iterable сущности.
res = map(lambda value: value**3, il)

# Возвращает опять итератор.
print(type(res), res)

# И его опять можно кастануть, если требуется.
print(list(res))