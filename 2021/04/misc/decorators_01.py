"""
Изнанка декораторов, часть 1.
"""

# У нас есть функция, которая принимает на вход другую функцию
# (не результат её работы, а именно саму функцию)
# и возвращает созданную обёртку над принятой функцией.
# Просто потому что может.
def test_decorator(func):
    def wrapper():
        print("Before the call")
        func()
        print("After the call")
    return wrapper


# А это некая смысловая функция
def hello():
    print("Hello")


# Теперь test - смысловая функция, обёрнутая некоторым образом
test = test_decorator(hello)

# Этот самый test можно вызвать как обычно
test()