"""
Это невероятно краткий конспект.
Потому что смысл был не в коде, а в том, что вокруг этого кода происходит.
В этом конспекте по сути только ключевые точки, на которые смотреть, изучая окружение.
"""

# После активации окружения я смотрел путь к интерпретатору командой which python3.
# Ещё иногда смотрел путь к pip-у командой which pip3.
# Это, конечно, было специфично для Linux.

import sys

# Какой у нас интерпретатор?
print("=== sys.version ===")
print(sys.version)

# Осмотримся, в какие пути смотрит интерпретатор.
print("\n=== sys.path ===")
for p in sys.path:
    print(p)

# Посмотрим на загруженные модули
# (В демке вывод был другой, но суть sys.modules, конечно, та же.)
print("\n=== sys.modules ===")
print(" ".join(sys.modules.keys()))

# Импортируем какой-нибудь недефолтный модуль
# (В демке мы его ещё ставили перед этим.)
import requests

# Посмотрим на конкретный модуль
# (В демке не было точечного указания __path__, но суть от этого не меняется.)
print("\n=== requests module path ===")
print(sys.modules['requests'].__path__)

"""
Вживую мы смотрели на:
- окружение с системным python-ом,
- окружение, которое принесла anaconda,
- venv, созданный системным python-ом.
Можете посмотреть ещё какие-нибудь вариации при желании.
"""
