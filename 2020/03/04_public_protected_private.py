"""
Аналоги public, protected и private есть. Но с нюансами.
Синтаксически они основаны на именовании:
    - что начинается с __ - то private,
    - что начинается с _ - то protected,
    - что начинается без подчёркиваний - то public.
Но держится всё это на сокрытии имён и порядочнсти участников процесса.
"""

# Это базовый класс
class A:
    def __init__(self, v):
        # Это его публичное поле
        self.a = v
        # Это protected
        self._b = v
        # А это приватное
        self.__c = v


# Это унаследованный класс
class B(A):

    # Это его публичный метод
    def do_some_work(self):
        print(self.a)       # Так можно
        print(self._b)      # Так тоже
        #print(self.__c)    # А так нельзя

    # А это приватный
    def __secret(self):
        print("Secret!")


# Это внешний код
b = B(42)

# Так нельзя, поле же private
#print(a.__c)

# А вот так внезапно можно. Потому что всего лишь сокрытие имён. Главное - знать, где искать.
print(b._A__c)

# Так можно
b.do_some_work()

# Так нельзя
#b.__secret()

# А так опять можно. Потому что опять главное - знать, где искать.
b._B__secret()
